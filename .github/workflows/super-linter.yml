---
# This workflow executes the following linters:
#    bash, clang-format, github-actions, gitleaks, md, py
# on touched files in the "main" branch.
name: Lint newly touched code

run-name: Linter run by @${{ github.actor }}

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  run-lint:
    env:
      # Only for .clang-format in the root folder of the project:
      LINTER_RULES_PATH: $GITHUB_WORKSPACE
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # Full git history is needed to get a proper list
          # of changed files within `super-linter`
          fetch-depth: 0

      - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false # to check touched files only
          VALIDATE_BASH: true
          VALIDATE_CLANG_FORMAT: true
          VALIDATE_GITHUB_ACTIONS: true
          VALIDATE_GITLEAKS: true
          VALIDATE_MARKDOWN: true
          VALIDATE_PYTHON: true
          # VALIDATE_NATURAL_LANGUAGE: true # do it someday...
          DEFAULT_BRANCH: "main"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-project:
    name: Build Project
    runs-on: ubuntu-latest
    needs: run-lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Configure, Build (and Test Project)
        uses: threeal/cmake-action
        with:
          run-build: true
          run-test: false # no tests yet
          source-dir: $GITHUB_WORKSPACE
          build-dir: $GITHUB_WORKSPACE/BUILD
          generator: Ninja
          # c-compiler: clang
          # cxx-compiler: clang++
      
      - name: Check build result
        run: |
          cd $GITHUB_WORKSPACE/BUILD
          ls -lah
          echo "Running application..."
          ./PW-Cpp-Qt-test-app
          echo "Application quite. All good."
          
