---
name: Check, build and run

run-name: Check, build and run triggered by @${{ github.actor }}

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  # run-lint:
  #   if: ${{ false }} # disable for now
  
  #   env:
  #     # Only for .clang-format in the root folder of the project:
  #     LINTER_RULES_PATH: $GITHUB_WORKSPACE
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #       with:
  #         # Full git history is needed to get a proper list
  #         # of changed files within `super-linter`
  #         fetch-depth: 0

  #     - name: Lint Code Base
  #       uses: github/super-linter@v4
  #       env:
  #         VALIDATE_ALL_CODEBASE: false # to check touched files only
  #         VALIDATE_BASH: true
  #         VALIDATE_CLANG_FORMAT: true
  #         VALIDATE_GITHUB_ACTIONS: true
  #         VALIDATE_GITLEAKS: true
  #         VALIDATE_MARKDOWN: true
  #         VALIDATE_PYTHON: true
  #         # VALIDATE_NATURAL_LANGUAGE: true # do it someday...
  #         DEFAULT_BRANCH: "main"
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dump_contexts_to_log:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"

      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"

      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"

      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"

      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"

  build-project:
    name: Build Project
    runs-on: ubuntu-latest

    env:
      SRC_DIR: '${{ github.workspace }}/${{ github.event.repository.name }}'
      BUILD_DIR: '${{ github.workspace }}/BUILD'
      APP_NAME: '${{ github.event.repository.name }}'

    # needs: run-lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check it all
        run: |
          cd "$GITHUB_WORKSPACE"
          ls -lah
          find . -name CMakeLists.txt
      
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.5.3'
          host: 'linux'
          target: 'desktop'
          install-deps: 'true'
          cache: 'false'
          # setup-python: 'true'
          #tools: 'tools_ifw tools_qtcreator,qt.tools.qtcreator'

      - name: Configure, Build (and Test Project)
        uses: threeal/cmake-action@v1.3.0

        with:
          run-build: true
          run-test: false # no tests yet
          source-dir: $SRC_DIR
          build-dir: $BUILD_DIR
          generator: Ninja
          # c-compiler: clang
          # cxx-compiler: clang++
      
      - name: Check build result
        run: |
          cd $BUILD_DIR"
          ls -lah
          echo 'Running application...'
          ./'$APP_NAME'
          echo 'Application quit. All good.'
